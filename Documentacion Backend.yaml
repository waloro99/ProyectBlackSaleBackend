swagger: "2.0"
info:
  description: "This is a sample server Black Sale."
  version: "1.0.0"
  title: "Black Sale"
  termsOfService: ""
  contact:
    email: "walterof1@hotmail.com"
host: "blacksale.swagger.io"
basePath: "/v1"
tags:
- name: "Product"
  description: "Products offered by the store."
  externalDocs:
    description: "Find out more about our store"
    url: "https://www.facebook.com/blacksalegt"
schemes:
- "http"
paths:
  /api/v1/products:
    post:
      tags:
      - "Product"
      summary: "Create product"
      description: "This can only be done by the user who is allowed to enter products."
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        "201":
          description: "Successful operation"
    get:
      tags:
      - "Product"
      summary: "Get all products"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "The id the product"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Successful operation."
          schema:
            $ref: "#/definitions/Product"
        "404":
          description: "Product not found."
  /api/v1/products/{id}:
    get:
      tags:
      - "Product"
      summary: "Get product by id product"
      description: ""
      operationId: "getProductById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The product that needs to be fetched. Use 0 for testing. "
        required: true
        type: "integer"
      responses:
        "200":
          description: "Successful operation."
          schema:
            $ref: "#/definitions/Product"
        "404":
          description: "Product not found."
    put:
      tags:
      - "Product"
      summary: "Updated product"
      description: "This can only be done by the user who has permission."
      operationId: "updateProduct"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Product that need to be updated"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        "204":
          description: "Successful operation."
        "404":
          description: "Product not found."
    delete:
      tags:
      - "Product"
      summary: "Delete product"
      description: "This can only be done by the user who has permission."
      operationId: "deleteProduct"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The product that needs to be deleted"
        required: true
        type: "integer"
      responses:
        "204":
          description: "Successful operation."
        "404":
          description: "Product not found."
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://blacksale.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:products: "modify products in your account"
      read:products: "read your products"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Product:
    type: "object"
    required:
    - "id"
    - "name"
    - "category"
    - "price"
    - "photo"
    - "stocks"
    - "description"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "Name Product"
      category:
        type: "string"
        example: "Temporada/Ni√±o/Dama/Caballero"
      price:
        type: "string"
        example: "Q12.00"
      photo:
        type: "string"
        example: "/photo1.png"
      stocks:
        type: "integer"
        format: "int64"
        example: "1"
      description:
        type: "string"
        example: "Description the product."
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Black Sale"
  url: "https://github.com/waloro99/ProyectBlackSaleBackend"